
day01.part1 : '{IO, Exception} ()
day01.part1 = do
  submitSolution (Day 1) (Part 1) day01.part1.solve

day01.part2 : '{IO, Exception} ()
day01.part2 = do
  submitSolution (Day 1) (Part 2) day01.part2.solve

structural type Input = Input Text

day01.part1.solve : Text -> {Exception, IO} Text
day01.part1.solve text = 
  input = runParser day01.parseInput text
  todo "implement solution for day 1 part 1"

day01.part2.solve : Text -> {Exception, IO} Text
day01.part2.solve text = 
  input = runParser day01.parseInput text
  todo "implement solution for day 1 part 2"

day01.parseInput : '{Parse Text} Input
day01.parseInput text = 
  Parse.fail (Error.UserDefined "implement parser for day 1")
  !endOfString
  Input "None"

runParser : '{Parse err} a -> Text -> {Exception, IO} a
runParser p text = 
  match Parse.run p text with
    Left err -> raiseGeneric "Parse error" err
    Right a -> a

day01.example = """
1abc2
pqr3stu8vwx
a1b2c3d4e5f
treb7uchet
"""

day01.part1.solveExample _ = day01.part1.solve day01.example
day01.part2.solveExample _ = day01.part2.solve day01.example

